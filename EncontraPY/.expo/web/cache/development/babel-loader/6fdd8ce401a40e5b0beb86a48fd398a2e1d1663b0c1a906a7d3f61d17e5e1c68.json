{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { parseString } from 'react-native-xml2js';\nimport { genoveXml } from \"./localData\";\nexport var fetchGenoveProducts = function () {\n  var _ref = _asyncToGenerator(function* () {\n    try {\n      return new Promise(function (resolve, reject) {\n        var options = {\n          explicitArray: true,\n          normalizeTags: false,\n          trim: true,\n          strict: false\n        };\n        parseString(genoveXml, options, function (err, result) {\n          if (err) {\n            console.error('Erro ao converter XML:', err);\n            resolve([]);\n            return;\n          }\n          try {\n            if (!result || !result.rss || !result.rss.channel || !result.rss.channel[0] || !result.rss.channel[0].item) {\n              console.warn('Estrutura XML inválida');\n              resolve([]);\n              return;\n            }\n            var items = result.rss.channel[0].item || [];\n            var validProducts = [];\n            items.forEach(function (item) {\n              if (item.title && item.title[0] && item.codigo && item.codigo[0] && item.preco && item.preco[0] && item.disponibilidade && item.disponibilidade[0]) {\n                validProducts.push({\n                  id: item.codigo[0],\n                  title: item.title[0],\n                  price: item.preco[0],\n                  image: item.link_imagem && item.link_imagem[0] ? item.link_imagem[0] : 'https://via.placeholder.com/150',\n                  availability: item.disponibilidade[0],\n                  brand: item.marca && item.marca[0] ? item.marca[0] : 'Sem marca',\n                  link: item.link && item.link[0] ? item.link[0] : '#',\n                  store: 'Genove'\n                });\n              }\n            });\n            resolve(validProducts);\n          } catch (processingError) {\n            console.error('Erro ao processar dados XML:', processingError);\n            resolve([]);\n          }\n        });\n      });\n    } catch (error) {\n      console.error('Erro geral:', error);\n      return [];\n    }\n  });\n  return function fetchGenoveProducts() {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["parseString","genoveXml","fetchGenoveProducts","_ref","_asyncToGenerator","Promise","resolve","reject","options","explicitArray","normalizeTags","trim","strict","err","result","console","error","rss","channel","item","warn","items","validProducts","forEach","title","codigo","preco","disponibilidade","push","id","price","image","link_imagem","availability","brand","marca","link","store","processingError","apply","arguments"],"sources":["C:/Users/neehi/Documents/GitHub/ecom-tech/EncontraPY/genoveApi.js"],"sourcesContent":["import { parseString } from 'react-native-xml2js';\nimport { genoveXml } from './localData';\n\nexport const fetchGenoveProducts = async () => {\n  try {\n    return new Promise((resolve, reject) => {\n      const options = {\n        explicitArray: true,\n        normalizeTags: false,\n        trim: true,\n        strict: false\n      };\n\n      parseString(genoveXml, options, (err, result) => {\n        if (err) {\n          console.error('Erro ao converter XML:', err);\n          resolve([]);\n          return;\n        }\n        \n        try {\n          if (!result || !result.rss || !result.rss.channel || !result.rss.channel[0] || !result.rss.channel[0].item) {\n            console.warn('Estrutura XML inválida');\n            resolve([]);\n            return;\n          }\n          \n          const items = result.rss.channel[0].item || [];\n          const validProducts = [];\n          \n          items.forEach(item => {\n            // Verifica se o item tem todos os campos necessários\n            if (item.title && item.title[0] && \n                item.codigo && item.codigo[0] && \n                item.preco && item.preco[0] && \n                item.disponibilidade && item.disponibilidade[0]) {\n              \n              validProducts.push({\n                id: item.codigo[0],\n                title: item.title[0],\n                price: item.preco[0],\n                image: (item.link_imagem && item.link_imagem[0]) ? \n                       item.link_imagem[0] : \n                       'https://via.placeholder.com/150',\n                availability: item.disponibilidade[0],\n                brand: (item.marca && item.marca[0]) ? item.marca[0] : 'Sem marca',\n                link: (item.link && item.link[0]) ? item.link[0] : '#',\n                store: 'Genove'\n              });\n            }\n          });\n          \n          resolve(validProducts);\n        } catch (processingError) {\n          console.error('Erro ao processar dados XML:', processingError);\n          resolve([]);\n        }\n      });\n    });\n  } catch (error) {\n    console.error('Erro geral:', error);\n    return [];\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}