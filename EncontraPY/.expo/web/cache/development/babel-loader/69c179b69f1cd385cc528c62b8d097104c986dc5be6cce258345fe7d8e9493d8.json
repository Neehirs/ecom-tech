{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport axios from 'axios';\nimport { parseString } from 'react-native-xml2js';\nvar API_URL = 'https://api-genove.agcodecraft.com/cp';\nexport var fetchGenoveProducts = function () {\n  var _ref = _asyncToGenerator(function* () {\n    try {\n      console.log('Iniciando requisição para a API Genove');\n      var response = yield axios.get(API_URL, {\n        responseType: 'text'\n      });\n      console.log('Resposta recebida, convertendo XML');\n      return new Promise(function (resolve, reject) {\n        parseString(response.data, function (err, result) {\n          if (err) {\n            console.error('Erro ao converter XML:', err);\n            reject(err);\n            return;\n          }\n          console.log('XML convertido:', JSON.stringify(result).substring(0, 200) + '...');\n          if (!result || !result.rss || !result.rss.channel || !result.rss.channel[0]) {\n            console.error('Estrutura XML inválida');\n            reject(new Error('Estrutura XML inválida'));\n            return;\n          }\n          var items = result.rss.channel[0].item || [];\n          console.log(`Encontrados ${items.length} produtos`);\n          var products = items.map(function (item) {\n            return {\n              id: item.codigo ? item.codigo[0] : '',\n              title: item.title ? item.title[0] : '',\n              price: item.preco ? item.preco[0] : '',\n              image: item.link_imagem ? item.link_imagem[0] : '',\n              availability: item.disponibilidade ? item.disponibilidade[0] : '',\n              brand: item.marca ? item.marca[0] : '',\n              link: item.link ? item.link[0] : '',\n              store: 'Genove'\n            };\n          });\n          console.log(`Produtos processados: ${products.length}`);\n          resolve(products);\n        });\n      });\n    } catch (error) {\n      console.error('Erro ao buscar produtos Genove:', error);\n      throw error;\n    }\n  });\n  return function fetchGenoveProducts() {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["axios","parseString","API_URL","fetchGenoveProducts","_ref","_asyncToGenerator","console","log","response","get","responseType","Promise","resolve","reject","data","err","result","error","JSON","stringify","substring","rss","channel","Error","items","item","length","products","map","id","codigo","title","price","preco","image","link_imagem","availability","disponibilidade","brand","marca","link","store","apply","arguments"],"sources":["C:/Users/neehi/Documents/GitHub/ecom-tech/EncontraPY/genoveApi.js"],"sourcesContent":["import axios from 'axios';\nimport { parseString } from 'react-native-xml2js';\n\nconst API_URL = 'https://api-genove.agcodecraft.com/cp';\n\nexport const fetchGenoveProducts = async () => {\n  try {\n    console.log('Iniciando requisição para a API Genove');\n    const response = await axios.get(API_URL, {\n      responseType: 'text',\n    });\n    \n    console.log('Resposta recebida, convertendo XML');\n    \n    return new Promise((resolve, reject) => {\n      parseString(response.data, (err, result) => {\n        if (err) {\n          console.error('Erro ao converter XML:', err);\n          reject(err);\n          return;\n        }\n        \n        console.log('XML convertido:', JSON.stringify(result).substring(0, 200) + '...');\n        \n        if (!result || !result.rss || !result.rss.channel || !result.rss.channel[0]) {\n          console.error('Estrutura XML inválida');\n          reject(new Error('Estrutura XML inválida'));\n          return;\n        }\n        \n        const items = result.rss.channel[0].item || [];\n        console.log(`Encontrados ${items.length} produtos`);\n        \n        const products = items.map(item => ({\n          id: item.codigo ? item.codigo[0] : '',\n          title: item.title ? item.title[0] : '',\n          price: item.preco ? item.preco[0] : '',\n          image: item.link_imagem ? item.link_imagem[0] : '',\n          availability: item.disponibilidade ? item.disponibilidade[0] : '',\n          brand: item.marca ? item.marca[0] : '',\n          link: item.link ? item.link[0] : '',\n          store: 'Genove'\n        }));\n        \n        console.log(`Produtos processados: ${products.length}`);\n        resolve(products);\n      });\n    });\n  } catch (error) {\n    console.error('Erro ao buscar produtos Genove:', error);\n    throw error;\n  }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}