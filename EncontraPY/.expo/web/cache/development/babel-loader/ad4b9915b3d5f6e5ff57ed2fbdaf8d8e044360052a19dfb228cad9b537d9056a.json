{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { parseString } from 'react-native-xml2js';\nimport { genoveXml } from \"./localData\";\nexport var fetchGenoveProducts = function () {\n  var _ref = _asyncToGenerator(function* () {\n    try {\n      return new Promise(function (resolve, reject) {\n        var options = {\n          explicitArray: true,\n          normalizeTags: false,\n          emptyTag: null,\n          ignoreAttrs: true\n        };\n        parseString(genoveXml, options, function (err, result) {\n          if (err) {\n            console.error('Erro ao converter XML:', err);\n            reject(err);\n            return;\n          }\n          try {\n            if (!result || !result.rss || !result.rss.channel || !result.rss.channel[0]) {\n              reject(new Error('Estrutura XML inválida'));\n              return;\n            }\n            var items = result.rss.channel[0].item || [];\n            var products = [];\n            for (var item of items) {\n              if (item.title && item.codigo && item.preco && item.disponibilidade) {\n                products.push({\n                  id: item.codigo[0],\n                  title: item.title[0],\n                  price: item.preco[0],\n                  image: item.link_imagem ? item.link_imagem[0] : 'https://via.placeholder.com/150',\n                  availability: item.disponibilidade[0],\n                  brand: item.marca ? item.marca[0] : 'Sem marca',\n                  link: item.link ? item.link[0] : '#',\n                  store: 'Genove'\n                });\n              }\n            }\n            resolve(products);\n          } catch (processingError) {\n            console.error('Erro ao processar dados XML:', processingError);\n            reject(processingError);\n          }\n        });\n      });\n    } catch (error) {\n      console.error('Erro geral:', error);\n      throw error;\n    }\n  });\n  return function fetchGenoveProducts() {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["parseString","genoveXml","fetchGenoveProducts","_ref","_asyncToGenerator","Promise","resolve","reject","options","explicitArray","normalizeTags","emptyTag","ignoreAttrs","err","result","console","error","rss","channel","Error","items","item","products","title","codigo","preco","disponibilidade","push","id","price","image","link_imagem","availability","brand","marca","link","store","processingError","apply","arguments"],"sources":["C:/Users/neehi/Documents/GitHub/ecom-tech/EncontraPY/genoveApi.js"],"sourcesContent":["import { parseString } from 'react-native-xml2js';\nimport { genoveXml } from './localData';\n\nexport const fetchGenoveProducts = async () => {\n  try {\n    return new Promise((resolve, reject) => {\n      // Opções para ignorar tags vazias\n      const options = {\n        explicitArray: true,\n        normalizeTags: false,\n        emptyTag: null,  // Converte tags vazias para null\n        ignoreAttrs: true // Ignora atributos XML\n      };\n\n      parseString(genoveXml, options, (err, result) => {\n        if (err) {\n          console.error('Erro ao converter XML:', err);\n          reject(err);\n          return;\n        }\n        \n        try {\n          if (!result || !result.rss || !result.rss.channel || !result.rss.channel[0]) {\n            reject(new Error('Estrutura XML inválida'));\n            return;\n          }\n          \n          const items = result.rss.channel[0].item || [];\n          const products = [];\n          \n          for (const item of items) {\n            // Verifica se os campos obrigatórios existem\n            if (item.title && item.codigo && item.preco && item.disponibilidade) {\n              products.push({\n                id: item.codigo[0],\n                title: item.title[0],\n                price: item.preco[0],\n                image: item.link_imagem ? item.link_imagem[0] : 'https://via.placeholder.com/150',\n                availability: item.disponibilidade[0],\n                brand: item.marca ? item.marca[0] : 'Sem marca',\n                link: item.link ? item.link[0] : '#',\n                store: 'Genove'\n              });\n            }\n          }\n          \n          resolve(products);\n        } catch (processingError) {\n          console.error('Erro ao processar dados XML:', processingError);\n          reject(processingError);\n        }\n      });\n    });\n  } catch (error) {\n    console.error('Erro geral:', error);\n    throw error;\n  }\n};"],"mappings":";AAAA,SAASA,WAAW,QAAQ,qBAAqB;AACjD,SAASC,SAAS;AAElB,OAAO,IAAMC,mBAAmB;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;IAC7C,IAAI;MACF,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;QAEtC,IAAMC,OAAO,GAAG;UACdC,aAAa,EAAE,IAAI;UACnBC,aAAa,EAAE,KAAK;UACpBC,QAAQ,EAAE,IAAI;UACdC,WAAW,EAAE;QACf,CAAC;QAEDZ,WAAW,CAACC,SAAS,EAAEO,OAAO,EAAE,UAACK,GAAG,EAAEC,MAAM,EAAK;UAC/C,IAAID,GAAG,EAAE;YACPE,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEH,GAAG,CAAC;YAC5CN,MAAM,CAACM,GAAG,CAAC;YACX;UACF;UAEA,IAAI;YACF,IAAI,CAACC,MAAM,IAAI,CAACA,MAAM,CAACG,GAAG,IAAI,CAACH,MAAM,CAACG,GAAG,CAACC,OAAO,IAAI,CAACJ,MAAM,CAACG,GAAG,CAACC,OAAO,CAAC,CAAC,CAAC,EAAE;cAC3EX,MAAM,CAAC,IAAIY,KAAK,CAAC,wBAAwB,CAAC,CAAC;cAC3C;YACF;YAEA,IAAMC,KAAK,GAAGN,MAAM,CAACG,GAAG,CAACC,OAAO,CAAC,CAAC,CAAC,CAACG,IAAI,IAAI,EAAE;YAC9C,IAAMC,QAAQ,GAAG,EAAE;YAEnB,KAAK,IAAMD,IAAI,IAAID,KAAK,EAAE;cAExB,IAAIC,IAAI,CAACE,KAAK,IAAIF,IAAI,CAACG,MAAM,IAAIH,IAAI,CAACI,KAAK,IAAIJ,IAAI,CAACK,eAAe,EAAE;gBACnEJ,QAAQ,CAACK,IAAI,CAAC;kBACZC,EAAE,EAAEP,IAAI,CAACG,MAAM,CAAC,CAAC,CAAC;kBAClBD,KAAK,EAAEF,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC;kBACpBM,KAAK,EAAER,IAAI,CAACI,KAAK,CAAC,CAAC,CAAC;kBACpBK,KAAK,EAAET,IAAI,CAACU,WAAW,GAAGV,IAAI,CAACU,WAAW,CAAC,CAAC,CAAC,GAAG,iCAAiC;kBACjFC,YAAY,EAAEX,IAAI,CAACK,eAAe,CAAC,CAAC,CAAC;kBACrCO,KAAK,EAAEZ,IAAI,CAACa,KAAK,GAAGb,IAAI,CAACa,KAAK,CAAC,CAAC,CAAC,GAAG,WAAW;kBAC/CC,IAAI,EAAEd,IAAI,CAACc,IAAI,GAAGd,IAAI,CAACc,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG;kBACpCC,KAAK,EAAE;gBACT,CAAC,CAAC;cACJ;YACF;YAEA9B,OAAO,CAACgB,QAAQ,CAAC;UACnB,CAAC,CAAC,OAAOe,eAAe,EAAE;YACxBtB,OAAO,CAACC,KAAK,CAAC,8BAA8B,EAAEqB,eAAe,CAAC;YAC9D9B,MAAM,CAAC8B,eAAe,CAAC;UACzB;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOrB,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;MACnC,MAAMA,KAAK;IACb;EACF,CAAC;EAAA,gBAtDYd,mBAAmBA,CAAA;IAAA,OAAAC,IAAA,CAAAmC,KAAA,OAAAC,SAAA;EAAA;AAAA,GAsD/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}