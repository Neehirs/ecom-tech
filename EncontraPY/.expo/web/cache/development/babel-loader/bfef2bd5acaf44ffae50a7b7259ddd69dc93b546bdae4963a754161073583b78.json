{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { parseString } from 'react-native-xml2js';\nimport { genoveXml } from \"./localData\";\nexport var fetchGenoveProducts = function () {\n  var _ref = _asyncToGenerator(function* () {\n    try {\n      return new Promise(function (resolve, reject) {\n        parseString(genoveXml, function (err, result) {\n          if (err) {\n            console.error('Erro ao converter XML:', err);\n            reject(err);\n            return;\n          }\n          var items = result.rss.channel[0].item || [];\n          var products = items.map(function (item) {\n            return {\n              id: item.codigo ? item.codigo[0] : '',\n              title: item.title ? item.title[0] : '',\n              price: item.preco ? item.preco[0] : '',\n              image: item.link_imagem ? item.link_imagem[0] : '',\n              availability: item.disponibilidade ? item.disponibilidade[0] : '',\n              brand: item.marca ? item.marca[0] : '',\n              link: item.link ? item.link[0] : '',\n              store: 'Genove'\n            };\n          });\n          resolve(products);\n        });\n      });\n    } catch (error) {\n      console.error('Erro ao processar produtos:', error);\n      throw error;\n    }\n  });\n  return function fetchGenoveProducts() {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["parseString","genoveXml","fetchGenoveProducts","_ref","_asyncToGenerator","Promise","resolve","reject","err","result","console","error","items","rss","channel","item","products","map","id","codigo","title","price","preco","image","link_imagem","availability","disponibilidade","brand","marca","link","store","apply","arguments"],"sources":["C:/Users/neehi/Documents/GitHub/ecom-tech/EncontraPY/genoveApi.js"],"sourcesContent":["import { parseString } from 'react-native-xml2js';\nimport { genoveXml } from './localData';\n\nexport const fetchGenoveProducts = async () => {\n  try {\n    return new Promise((resolve, reject) => {\n      parseString(genoveXml, (err, result) => {\n        if (err) {\n          console.error('Erro ao converter XML:', err);\n          reject(err);\n          return;\n        }\n        \n        const items = result.rss.channel[0].item || [];\n        \n        const products = items.map(item => ({\n          id: item.codigo ? item.codigo[0] : '',\n          title: item.title ? item.title[0] : '',\n          price: item.preco ? item.preco[0] : '',\n          image: item.link_imagem ? item.link_imagem[0] : '',\n          availability: item.disponibilidade ? item.disponibilidade[0] : '',\n          brand: item.marca ? item.marca[0] : '',\n          link: item.link ? item.link[0] : '',\n          store: 'Genove'\n        }));\n        \n        resolve(products);\n      });\n    });\n  } catch (error) {\n    console.error('Erro ao processar produtos:', error);\n    throw error;\n  }\n};"],"mappings":";AAAA,SAASA,WAAW,QAAQ,qBAAqB;AACjD,SAASC,SAAS;AAElB,OAAO,IAAMC,mBAAmB;EAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;IAC7C,IAAI;MACF,OAAO,IAAIC,OAAO,CAAC,UAACC,OAAO,EAAEC,MAAM,EAAK;QACtCP,WAAW,CAACC,SAAS,EAAE,UAACO,GAAG,EAAEC,MAAM,EAAK;UACtC,IAAID,GAAG,EAAE;YACPE,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEH,GAAG,CAAC;YAC5CD,MAAM,CAACC,GAAG,CAAC;YACX;UACF;UAEA,IAAMI,KAAK,GAAGH,MAAM,CAACI,GAAG,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,IAAI,EAAE;UAE9C,IAAMC,QAAQ,GAAGJ,KAAK,CAACK,GAAG,CAAC,UAAAF,IAAI;YAAA,OAAK;cAClCG,EAAE,EAAEH,IAAI,CAACI,MAAM,GAAGJ,IAAI,CAACI,MAAM,CAAC,CAAC,CAAC,GAAG,EAAE;cACrCC,KAAK,EAAEL,IAAI,CAACK,KAAK,GAAGL,IAAI,CAACK,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE;cACtCC,KAAK,EAAEN,IAAI,CAACO,KAAK,GAAGP,IAAI,CAACO,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE;cACtCC,KAAK,EAAER,IAAI,CAACS,WAAW,GAAGT,IAAI,CAACS,WAAW,CAAC,CAAC,CAAC,GAAG,EAAE;cAClDC,YAAY,EAAEV,IAAI,CAACW,eAAe,GAAGX,IAAI,CAACW,eAAe,CAAC,CAAC,CAAC,GAAG,EAAE;cACjEC,KAAK,EAAEZ,IAAI,CAACa,KAAK,GAAGb,IAAI,CAACa,KAAK,CAAC,CAAC,CAAC,GAAG,EAAE;cACtCC,IAAI,EAAEd,IAAI,CAACc,IAAI,GAAGd,IAAI,CAACc,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE;cACnCC,KAAK,EAAE;YACT,CAAC;UAAA,CAAC,CAAC;UAEHxB,OAAO,CAACU,QAAQ,CAAC;QACnB,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD,MAAMA,KAAK;IACb;EACF,CAAC;EAAA,gBA9BYT,mBAAmBA,CAAA;IAAA,OAAAC,IAAA,CAAA4B,KAAA,OAAAC,SAAA;EAAA;AAAA,GA8B/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}